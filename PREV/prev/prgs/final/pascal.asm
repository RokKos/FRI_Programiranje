% Code generated by PREV compiler
SP	GREG	Stack_Segment
FP	GREG	#6100000000000000
	LOC	Data_Segment
DATA	GREG	@
% Code Segment
	LOC	#500
Main	PUSHJ	$8,_main
% STOPPING PROGRAM
	TRAP	0,Halt,0
% Code for function: _main
	%	 --- Prolog ---
_main	SET	 $0,32
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,56
	SUB	 SP,SP,$0
	JMP	 L17
L17	SET	 $0,0
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
L6	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,5
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSN	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L10
L5	SET	 $0,0
	SET	 $2,$0
	SET	 $1,$253
	SET	 $0,16
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	STO	 $2,$0,0
L8	SET	 $1,$253
	SET	 $0,16
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,8
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	CMP	 $0,$0,$1
	ZSNP	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L9
L7	SET	 $0,0
	SET	 $0,$0
	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $3,$253
	SET	 $2,8
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $0,$254,0
	STO	 $1,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_pascal
	LDO	 $1,$254,0
	STO	 $0,$254,0
	STO	 $0,$254,8
	PUSHJ	 $8,_putInt
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,32
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $1,$253
	SET	 $0,16
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,1
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
	JMP	 L8
L9	SET	 $0,0
	SET	 $2,$0
	SET	 $0,10
	SET	 $0,$0
	SET	 $1,256
	SET	 $1,$1
	DIV	 $0,$0,$1
	GET	 $0,rR
	SET	 $0,$0
	STO	 $2,$254,0
	STO	 $0,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
	JMP	 L6
L10	SET	 $0,0
	SET	 $0,$0
	JMP	 L18
	%	 --- Epilogue ---
L18	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,32
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _pascal
	%	 --- Prolog ---
_pascal	SET	 $0,24
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,48
	SUB	 SP,SP,$0
	JMP	 L19
L19	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,0
	SET	 $0,$0
	CMP	 $0,$1,$0
	NXOR	 $0,$0,0
	SET	 $1,$0
	SET	 $0,$253
	SET	 $2,8
	SET	 $2,$2
	ADD	 $0,$0,$2
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $3,16
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	CMP	 $0,$0,$2
	NXOR	 $0,$0,0
	SET	 $0,$0
	OR	 $0,$1,$0
	SET	 $0,$0
	BZ	 $0,L13
L11	SET	 $0,1
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
	JMP	 L12
L13	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,0
	SET	 $1,$1
	CMP	 $0,$0,$1
	ZSN	 $0,$0,1
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $3,$253
	SET	 $2,16
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	CMP	 $0,$0,$2
	ZSP	 $0,$0,1
	SET	 $0,$0
	OR	 $0,$1,$0
	SET	 $0,$0
	BZ	 $0,L16
L14	SET	 $0,0
	SET	 $2,$0
	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	STO	 $2,$0,0
	JMP	 L15
L16	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $2,$253
	SET	 $3,16
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $3,$2
	SET	 $2,1
	SET	 $2,$2
	SUB	 $2,$3,$2
	SET	 $2,$2
	STO	 $0,$254,0
	STO	 $1,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_pascal
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $1,$0
	SET	 $0,$253
	SET	 $2,8
	SET	 $2,$2
	ADD	 $0,$0,$2
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $2,$0
	SET	 $0,1
	SET	 $0,$0
	SUB	 $0,$2,$0
	SET	 $0,$0
	SET	 $3,$253
	SET	 $2,16
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $3,$2
	SET	 $2,1
	SET	 $2,$2
	SUB	 $2,$3,$2
	SET	 $2,$2
	STO	 $1,$254,0
	STO	 $0,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_pascal
	LDO	 $0,$254,0
	ADD	 $0,$1,$1
	SET	 $2,$0
	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	STO	 $2,$0,0
L15L12	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	JMP	 L20
	%	 --- Epilogue ---
L20	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,24
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _putChar
	%	 --- Prolog ---
_putChar	SET	 $0,16
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,24
	SUB	 SP,SP,$0
	JMP	 L21
L21	SET	$0,8
	ADD	$0,FP,$0
	LDO	$1,FP,0
	SET	$255,$0
	TRAP	0,Fputs,StdOut
	%	 --- Epilogue ---
L22	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,16
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
