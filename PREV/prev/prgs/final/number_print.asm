% Code generated by PREV compiler
SP	GREG	Stack_Segment
FP	GREG	#6100000000000000
	LOC	Data_Segment
DATA	GREG	@
_i	null,0
% Code Segment
	LOC	#500
Main	PUSHJ	$8,main
% STOPPING PROGRAM
	TRAP	0,Halt,0
% Code for function: _main
	%	 --- Prolog ---
main	SET	 $0,16
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,32
	SUB	 SP,SP,$0
	JMP	 L7
L7	SET	 $0,100
	NEG	 $0,0,$0
	SET	 $1,$0
	SET	 $0, _i
	SET	 $0,$0
	STO	 $1,$0,0
L5	SET	 $0, _i
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,100
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSNP	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L6
L4	SET	 $0,0
	SET	 $0,$0
	SET	 $1, _i
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putInt
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $2,$0
	SET	 $0,10
	SET	 $0,$0
	SET	 $1,256
	SET	 $1,$1
	DIV	 $0,$0,$1
	GET	 $0, $rR
	SET	 $0,$0
	STO	 $2,$254,0
	STO	 $0,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0, _i
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $1,$0
	SET	 $0, _i
	SET	 $0,$0
	STO	 $1,$0,0
	JMP	 L5
L6	SET	 $0,0
	SET	 $0,$0
	JMP	 L8
	%	 --- Epilogue ---
L8	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,16
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
