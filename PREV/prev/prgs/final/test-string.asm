% Code generated by PREV compiler
SP	GREG	Stack_Segment
FP	GREG	#6100000000000000
	LOC	Data_Segment
DATA	GREG	@
_i	OCTA	0
L0	OCTA	"foo",0
% Code Segment
	LOC	#500
Main	PUSHJ	$8,_main
% STOPPING PROGRAM
	TRAP	0,Halt,0
% Code for function: _p
	%	 --- Prolog ---
_p	SET	 $0,24
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,40
	SUB	 SP,SP,$0
	JMP	 L3
L3	SET	 $0,0
	SET	 $0,0
	SET	 $1,$0
	LDA	 $2,L0
	LDO	 $0,$2,0
	SET	 $0,$2
	STO	 $1,$254,0
	STO	 $0,$254,8
	PUSHJ	 $8,_printf
	LDO	 $0,$254,0
	JMP	 L4
	%	 --- Epilogue ---
L4	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,24
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _putChar
	%	 --- Prolog ---
_putChar	SET	 $0,16
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,24
	SUB	 SP,SP,$0
	JMP	 L5
L5	SET	$0,8
	ADD	$0,FP,$0
	LDO	$1,FP,0
	SET	$255,$0
	TRAP	0,Fputs,StdOut
	%	 --- Epilogue ---
L6	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,16
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
