% Code generated by PREV compiler
SP	GREG	Stack_Segment
FP	GREG	#6100000000000000
HP	GREG	Data_Segment
	LOC	Data_Segment
L3	BYTE	"facItr:",0
L4	BYTE	": ",0
L5	BYTE	"facRec:",0
L6	BYTE	": ",0
L7	BYTE	"fibItr:",0
L8	BYTE	": ",0
L9	BYTE	"fibRec:",0
L10	BYTE	": ",0
L11	BYTE	"BinTree:",0
ReadSize	IS	255

ReadArgs	BYTE	0,ReadSize

% Code Segment
	LOC	#500
Main	PUSHJ	$8,_main
% STOPPING PROGRAM
	TRAP	0,Halt,0
% Code for function: _main
	%	 --- Prolog ---
_main	SET	 $0,40
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,64
	SUB	 SP,SP,$0
	JMP	 L85
L85	SET	 $0,0
	SET	 $0,$0
	LDA	 $1,L3
	LDO	 $2,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putString
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $1,$1
	SET	 $2,256
	SET	 $2,$2
	DIV	 $1,$1,$2
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,1
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
L23	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $1,$1
	CMP	 $0,$0,$1
	ZSNP	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L24
L22	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putInt
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	LDA	 $1,L4
	LDO	 $2,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putString
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,0
	SET	 $1,$1
	SET	 $3,$253
	SET	 $2,8
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $1,$254,0
	STO	 $2,$254,8
	PUSHJ	 $8,_facItr
	LDO	 $1,$254,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putInt
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $2,$1
	SET	 $1,256
	SET	 $1,$1
	DIV	 $1,$2,$1
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,$253
	SET	 $1,8
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,1
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $2,$0
	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	STO	 $2,$0,0
	JMP	 L23
L24	SET	 $0,0
	SET	 $0,$0
	LDA	 $1,L5
	LDO	 $2,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putString
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $2,$1
	SET	 $1,256
	SET	 $1,$1
	DIV	 $1,$2,$1
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,1
	SET	 $2,$0
	SET	 $0,$253
	SET	 $1,8
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	STO	 $2,$0,0
L26	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,10
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSNP	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L27
L25	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putInt
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $1,$0
	LDA	 $2,L6
	LDO	 $0,$2,0
	SET	 $0,$2
	STO	 $1,$254,0
	STO	 $0,$254,8
	PUSHJ	 $8,_putString
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,0
	SET	 $1,$1
	SET	 $2,$253
	SET	 $3,8
	NEG	 $3,0,$3
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $1,$254,0
	STO	 $2,$254,8
	PUSHJ	 $8,_facRec
	LDO	 $1,$254,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putInt
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $2,$1
	SET	 $1,256
	SET	 $1,$1
	DIV	 $1,$2,$1
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,$253
	SET	 $1,8
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,1
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
	JMP	 L26
L27	SET	 $0,0
	SET	 $0,$0
	LDA	 $1,L7
	LDO	 $2,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putString
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $2,$1
	SET	 $1,256
	SET	 $1,$1
	DIV	 $1,$2,$1
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,1
	SET	 $2,$0
	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	STO	 $2,$0,0
L29	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,10
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSNP	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L30
L28	SET	 $0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,8
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putInt
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $2,$0
	LDA	 $1,L8
	LDO	 $0,$1,0
	SET	 $0,$1
	STO	 $2,$254,0
	STO	 $0,$254,8
	PUSHJ	 $8,_putString
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,0
	SET	 $1,$1
	SET	 $3,$253
	SET	 $2,8
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $1,$254,0
	STO	 $2,$254,8
	PUSHJ	 $8,_fibItr
	LDO	 $1,$254,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putInt
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $1,$1
	SET	 $2,256
	SET	 $2,$2
	DIV	 $1,$1,$2
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,1
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
	JMP	 L29
L30	SET	 $0,0
	SET	 $0,$0
	LDA	 $1,L9
	LDO	 $2,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putString
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $2,$1
	SET	 $1,256
	SET	 $1,$1
	DIV	 $1,$2,$1
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,1
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
L32	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,10
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSNP	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L33
L31	SET	 $0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,8
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putInt
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $2,$0
	LDA	 $0,L10
	LDO	 $1,$0,0
	SET	 $0,$0
	STO	 $2,$254,0
	STO	 $0,$254,8
	PUSHJ	 $8,_putString
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $1,$0
	SET	 $0,0
	SET	 $0,$0
	SET	 $3,$253
	SET	 $2,8
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $0,$254,0
	STO	 $2,$254,8
	PUSHJ	 $8,_fibRec
	LDO	 $0,$254,0
	SET	 $0,$0
	STO	 $1,$254,0
	STO	 $0,$254,8
	PUSHJ	 $8,_putInt
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $2,$1
	SET	 $1,256
	SET	 $1,$1
	DIV	 $1,$2,$1
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,1
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $2,$0
	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	STO	 $2,$0,0
	JMP	 L32
L33	SET	 $0,0
	SET	 $0,$0
	LDA	 $1,L11
	LDO	 $2,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putString
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $2,$1
	SET	 $1,256
	SET	 $1,$1
	DIV	 $1,$2,$1
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $1,$0
	SET	 $0,$253
	SET	 $2,24
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $0,$0,$2
	SET	 $0,$0
	STO	 $1,$0,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,24
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_printBT
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $2,$1
	SET	 $1,256
	SET	 $1,$1
	DIV	 $1,$2,$1
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,5
	SET	 $1,$1
	SET	 $2,$253
	SET	 $3,24
	NEG	 $3,0,$3
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $0,$254,0
	STO	 $1,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_insBT
	LDO	 $0,$254,0
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,24
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,24
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_printBT
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $2,$1
	SET	 $1,256
	SET	 $1,$1
	DIV	 $1,$2,$1
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,7
	SET	 $1,$1
	SET	 $2,$253
	SET	 $3,24
	NEG	 $3,0,$3
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $0,$254,0
	STO	 $1,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_insBT
	LDO	 $0,$254,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,24
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,24
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_printBT
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $2,$1
	SET	 $1,256
	SET	 $1,$1
	DIV	 $1,$2,$1
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $1,$0
	SET	 $0,8
	SET	 $0,$0
	SET	 $3,$253
	SET	 $2,24
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $1,$254,0
	STO	 $0,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_insBT
	LDO	 $0,$254,0
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,24
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,24
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_printBT
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $2,$1
	SET	 $1,256
	SET	 $1,$1
	DIV	 $1,$2,$1
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $1,$0
	SET	 $0,2
	SET	 $0,$0
	SET	 $2,$253
	SET	 $3,24
	NEG	 $3,0,$3
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $1,$254,0
	STO	 $0,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_insBT
	LDO	 $0,$254,0
	SET	 $2,$0
	SET	 $0,$253
	SET	 $1,24
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	STO	 $2,$0,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,24
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_printBT
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $1,$1
	SET	 $2,256
	SET	 $2,$2
	DIV	 $1,$1,$2
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,6
	SET	 $1,$1
	SET	 $3,$253
	SET	 $2,24
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $0,$254,0
	STO	 $1,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_insBT
	LDO	 $0,$254,0
	SET	 $1,$0
	SET	 $0,$253
	SET	 $2,24
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $0,$0,$2
	SET	 $0,$0
	STO	 $1,$0,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,24
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_printBT
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,10
	SET	 $2,$1
	SET	 $1,256
	SET	 $1,$1
	DIV	 $1,$2,$1
	GET	 $1,rR
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,8
	SET	 $1,$1
	SET	 $3,$253
	SET	 $2,24
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $0,$254,0
	STO	 $1,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_delBT
	LDO	 $0,$254,0
	SET	 $2,$0
	SET	 $0,$253
	SET	 $1,24
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	STO	 $2,$0,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,24
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_printBT
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $2,$0
	SET	 $0,10
	SET	 $0,$0
	SET	 $1,256
	SET	 $1,$1
	DIV	 $0,$0,$1
	GET	 $0,rR
	SET	 $0,$0
	STO	 $2,$254,0
	STO	 $0,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,0
	SET	 $0,$0
	JMP	 L86
	%	 --- Epilogue ---
L86	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,40
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _facItr
	%	 --- Prolog ---
_facItr	SET	 $0,24
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,24
	SUB	 SP,SP,$0
	JMP	 L87
L87	SET	 $0,1
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
L35	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,0
	SET	 $1,$1
	CMP	 $0,$0,$1
	ZSP	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L36
L34	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	MUL	 $0,$0,$1
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,1
	SET	 $0,$0
	SUB	 $0,$1,$0
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
	JMP	 L35
L36	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	JMP	 L88
	%	 --- Epilogue ---
L88	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,24
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _facRec
	%	 --- Prolog ---
_facRec	SET	 $0,24
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,40
	SUB	 SP,SP,$0
	JMP	 L89
L89	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,1
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSZ	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L39
L37	SET	 $0,1
	SET	 $2,$0
	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	STO	 $2,$0,0
	JMP	 L38
L39	SET	 $0,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,0
	SET	 $1,$1
	SET	 $2,$253
	SET	 $3,8
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	SET	 $3,1
	SET	 $3,$3
	SUB	 $2,$2,$3
	SET	 $2,$2
	STO	 $1,$254,0
	STO	 $2,$254,8
	PUSHJ	 $8,_facRec
	LDO	 $1,$254,0
	SET	 $1,$1
	MUL	 $0,$0,$1
	SET	 $2,$0
	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	STO	 $2,$0,0
L38	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	JMP	 L90
	%	 --- Epilogue ---
L90	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,24
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _fibItr
	%	 --- Prolog ---
_fibItr	SET	 $0,40
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,40
	SUB	 SP,SP,$0
	JMP	 L91
L91	SET	 $0,1
	SET	 $1,$0
	SET	 $0,$253
	SET	 $2,8
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $0,$0,$2
	SET	 $0,$0
	STO	 $1,$0,0
	SET	 $0,1
	SET	 $2,$0
	SET	 $1,$253
	SET	 $0,16
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	STO	 $2,$0,0
	SET	 $0,0
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,24
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
L41	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,1
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSP	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L42
L40	SET	 $0,$253
	SET	 $1,16
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,24
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
	SET	 $1,$253
	SET	 $0,16
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $2,$0
	SET	 $1,$253
	SET	 $0,24
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	STO	 $2,$0,0
	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,16
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,1
	SET	 $1,$1
	SUB	 $0,$0,$1
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
	JMP	 L41
L42	SET	 $0,$253
	SET	 $1,8
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	JMP	 L92
	%	 --- Epilogue ---
L92	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,40
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _fibRec
	%	 --- Prolog ---
_fibRec	SET	 $0,24
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,40
	SUB	 SP,SP,$0
	JMP	 L93
L93	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,2
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSNP	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L45
L43	SET	 $0,1
	SET	 $2,$0
	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	STO	 $2,$0,0
	JMP	 L44
L45	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $2,1
	SET	 $2,$2
	SUB	 $1,$1,$2
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_fibRec
	LDO	 $0,$254,0
	SET	 $0,$0
	SET	 $1,0
	SET	 $1,$1
	SET	 $3,$253
	SET	 $2,8
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $3,$2
	SET	 $2,2
	SET	 $2,$2
	SUB	 $2,$3,$2
	SET	 $2,$2
	STO	 $1,$254,0
	STO	 $2,$254,8
	PUSHJ	 $8,_fibRec
	LDO	 $1,$254,0
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
L44	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	JMP	 L94
	%	 --- Epilogue ---
L94	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,24
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _printBT
	%	 --- Prolog ---
_printBT	SET	 $0,16
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,32
	SUB	 SP,SP,$0
	JMP	 L95
L95	SET	 $0,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,0
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSZ	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L48
L46	SET	 $0,0
	SET	 $0,$0
	SET	 $1,36
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	JMP	 L47
L48	SET	 $0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,8
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,0
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putInt
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $1,$0
	SET	 $0,40
	SET	 $0,$0
	STO	 $1,$254,0
	STO	 $0,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $2,8
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_printBT
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $1,$0
	SET	 $0,44
	SET	 $0,$0
	STO	 $1,$254,0
	STO	 $0,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $2,16
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_printBT
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $1,41
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_putChar
	LDO	 $0,$254,0
L47	SET	 $0,0
	SET	 $0,$0
	JMP	 L96
	%	 --- Epilogue ---
L96	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,16
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _insBT
	%	 --- Prolog ---
_insBT	SET	 $0,16
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,40
	SUB	 SP,SP,$0
	JMP	 L97
L97	SET	 $1,$253
	SET	 $0,16
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,0
	SET	 $1,$1
	CMP	 $0,$0,$1
	ZSZ	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L51
L49	SET	 $0,0
	SET	 $1,$0
	SET	 $0,24
	SET	 $0,$0
	STO	 $1,$254,0
	STO	 $0,$254,8
	PUSHJ	 $8,_new
	LDO	 $0,$254,0
	SET	 $2,$0
	SET	 $1,$253
	SET	 $0,16
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	STO	 $2,$0,0
	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,0
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
	JMP	 L50
L51	SET	 $1,$253
	SET	 $0,16
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,0
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,8
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	CMP	 $0,$0,$1
	ZSNZ	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L57
L52	SET	 $0,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,0
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	CMP	 $0,$0,$1
	ZSN	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L56
L54	SET	 $0,0
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $3,16
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $3,$2
	SET	 $2,8
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $1,$254,0
	STO	 $0,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_insBT
	LDO	 $0,$254,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $2,8
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	STO	 $0,$1,0
	JMP	 L55
L56	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $2,$253
	SET	 $3,16
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	SET	 $3,16
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $0,$254,0
	STO	 $1,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_insBT
	LDO	 $0,$254,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $2,16
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	STO	 $0,$1,0
L55	JMP	 L53
L57	SWYM	0,4,2 %Two labels one after another
L53	SWYM	0,4,2 %Two labels one after another
L50	SET	 $1,$253
	SET	 $0,16
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	JMP	 L98
	%	 --- Epilogue ---
L98	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,16
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _delBT
	%	 --- Prolog ---
_delBT	SET	 $0,32
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,56
	SUB	 SP,SP,$0
	JMP	 L99
L99	SET	 $0,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,0
	SET	 $1,$1
	CMP	 $0,$0,$1
	ZSNZ	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L72
L58	SET	 $0,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	CMP	 $0,$0,$1
	ZSZ	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L68
L60	SET	 $1,$253
	SET	 $0,16
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,8
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,0
	SET	 $1,$1
	CMP	 $0,$0,$1
	ZSZ	 $0,$0,1
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $2,0
	SET	 $2,$2
	CMP	 $1,$1,$2
	ZSZ	 $1,$1,1
	SET	 $1,$1
	AND	 $0,$0,$1
	SET	 $0,$0
	BZ	 $0,L64
L62	SET	 $0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,16
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_del
	LDO	 $0,$254,0
	SET	 $0,0
	SET	 $1,$0
	SET	 $0,$253
	SET	 $2,16
	SET	 $2,$2
	ADD	 $0,$0,$2
	SET	 $0,$0
	STO	 $1,$0,0
	JMP	 L63
L64	SET	 $1,$253
	SET	 $0,16
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,0
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSNZ	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L67
L65	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $2,8
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_maxBT
	LDO	 $0,$254,0
	SET	 $2,$0
	SET	 $0,$253
	SET	 $1,8
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	STO	 $2,$0,0
	SET	 $0,$253
	SET	 $1,8
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,0
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
	SET	 $0,0
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $3,16
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $3,$2
	SET	 $2,8
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $1,$254,0
	STO	 $0,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_delBT
	LDO	 $0,$254,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
	SET	 $0,0
	JMP	 L66
L67	SET	 $0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,16
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_minBT
	LDO	 $0,$254,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
	SET	 $0,$253
	SET	 $1,16
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,16
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $2,0
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	STO	 $0,$1,0
	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $3,$253
	SET	 $2,16
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $3,$2
	SET	 $2,16
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $0,$254,0
	STO	 $1,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_delBT
	LDO	 $0,$254,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,16
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
	SET	 $0,0
L66	SWYM	0,4,2 %Two labels one after another
L63	JMP	 L61
L68	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,0
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	CMP	 $0,$0,$1
	ZSN	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L71
L69	SET	 $0,0
	SET	 $1,$0
	SET	 $0,$253
	SET	 $2,8
	SET	 $2,$2
	ADD	 $0,$0,$2
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $3,16
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	SET	 $3,8
	SET	 $3,$3
	ADD	 $2,$2,$3
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $1,$254,0
	STO	 $0,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_delBT
	LDO	 $0,$254,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,16
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
	JMP	 L70
L71	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $3,$253
	SET	 $2,16
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $3,$2
	SET	 $2,16
	SET	 $2,$2
	ADD	 $2,$3,$2
	SET	 $2,$2
	LDO	 $2,$2,0
	SET	 $2,$2
	STO	 $0,$254,0
	STO	 $1,$254,8
	STO	 $2,$254,16
	PUSHJ	 $8,_delBT
	LDO	 $0,$254,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,16
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
L70	SWYM	0,4,2 %Two labels one after another
L61	JMP	 L59
L72	SWYM	0,4,2 %Two labels one after another
L59	SET	 $1,$253
	SET	 $0,16
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	JMP	 L100
	%	 --- Epilogue ---
L100	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,32
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _minBT
	%	 --- Prolog ---
_minBT	SET	 $0,24
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,40
	SUB	 SP,SP,$0
	JMP	 L101
L101	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,0
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSZ	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L75
L73	SET	 $0,0
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
	JMP	 L74
L75	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,0
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSZ	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L78
L76	SET	 $1,$253
	SET	 $0,8
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,8
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	STO	 $0,$1,0
	JMP	 L77
L78	SET	 $0,0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $2,$1
	SET	 $1,16
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_minBT
	LDO	 $0,$254,0
	SET	 $1,$0
	SET	 $0,$253
	SET	 $2,8
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $0,$0,$2
	SET	 $0,$0
	STO	 $1,$0,0
L77	SWYM	0,4,2 %Two labels one after another
L74	SET	 $0,$253
	SET	 $1,8
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	JMP	 L102
	%	 --- Epilogue ---
L102	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,24
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _maxBT
	%	 --- Prolog ---
_maxBT	SET	 $0,24
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,40
	SUB	 SP,SP,$0
	JMP	 L103
L103	SET	 $0,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	SET	 $1,0
	SET	 $1,$1
	CMP	 $0,$0,$1
	ZSZ	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L81
L79	SET	 $0,0
	SET	 $1,$0
	SET	 $0,$253
	SET	 $2,8
	NEG	 $2,0,$2
	SET	 $2,$2
	ADD	 $0,$0,$2
	SET	 $0,$0
	STO	 $1,$0,0
	JMP	 L80
L81	SET	 $0,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,16
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,0
	SET	 $0,$0
	CMP	 $0,$1,$0
	ZSZ	 $0,$0,1
	SET	 $0,$0
	BZ	 $0,L84
L82	SET	 $0,$253
	SET	 $1,8
	SET	 $1,$1
	ADD	 $0,$0,$1
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $1,$0
	SET	 $0,0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	SET	 $2,$253
	SET	 $1,8
	NEG	 $1,0,$1
	SET	 $1,$1
	ADD	 $1,$2,$1
	SET	 $1,$1
	STO	 $0,$1,0
	JMP	 L83
L84	SET	 $0,0
	SET	 $0,$0
	SET	 $1,$253
	SET	 $2,8
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	SET	 $2,16
	SET	 $2,$2
	ADD	 $1,$1,$2
	SET	 $1,$1
	LDO	 $1,$1,0
	SET	 $1,$1
	STO	 $0,$254,0
	STO	 $1,$254,8
	PUSHJ	 $8,_maxBT
	LDO	 $0,$254,0
	SET	 $1,$0
	SET	 $2,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$2,$0
	SET	 $0,$0
	STO	 $1,$0,0
L83	SWYM	0,4,2 %Two labels one after another
L80	SET	 $1,$253
	SET	 $0,8
	NEG	 $0,0,$0
	SET	 $0,$0
	ADD	 $0,$1,$0
	SET	 $0,$0
	LDO	 $0,$0,0
	SET	 $0,$0
	JMP	 L104
	%	 --- Epilogue ---
L104	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,24
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0

--- PREV STD LIB ---

 % Code for function: _new
	%	 --- Prolog ---
_new	SET	 $0,16
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,24
	SUB	 SP,SP,$0
	JMP	 L105
L105	SET	$0,8
	ADD	$0,FP,$0
	LDO	$1,$0,0
	SET	$0,HP % For return value
	ADD	HP,HP,$1
	%	 --- Epilogue ---
L106	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,16
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
_del	POP 8,0 % Memory leak
% Code for function: _putChar
	%	 --- Prolog ---
_putChar	SET	 $0,16
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,24
	SUB	 SP,SP,$0
	JMP	 L107
L107	SET	$0,14
	ADD	$0,FP,$0
	%Putting char one position in front
	%so that we put end char at the end
	LDB	$1,$0,1
	STB	$1,$0,0
	SET	$1,0
	STB	$1,$0,1
	SET	$255,$0
	TRAP	0,Fputs,StdOut
	%	 --- Epilogue ---
L108	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,16
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _putString
	%	 --- Prolog ---
_putString	SET	 $0,16
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,24
	SUB	 SP,SP,$0
	JMP	 L109
L109	SET	$0,8
	ADD	$0,FP,$0
	LDO	$1,$0,0
	SET	$255,$1
	TRAP	0,Fputs,StdOut
	%	 --- Epilogue ---
L110	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,16
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _readString
	%	 --- Prolog ---
_readString	SET	 $0,16
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,24
	SUB	 SP,SP,$0
	JMP	 L111
L111	LDA	$255,ReadArgs
	SET	$0,$255
	TRAP	0,Fgets,StdIn
	%	 --- Epilogue ---
L112	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,16
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
% Code for function: _putInt
	%	 --- Prolog ---
_putInt	SET	 $0,32
	%	 Storing FP 
	SUB	 $0,SP,$0
	STO	 FP,$0,0
	%	 STORING RA 
	GET	 $1,rJ
	STO	 $1,$0,8
	%	 Lowering FP 
	SET	 FP,SP
	%	 Lowering SP 
	SET	 $0,48
	SUB	 SP,SP,$0
	JMP	 L113
% Storing inverse number
L113	SET	$0,16
	SUB	$0,FP,$0
	SET	$1,1
	STO	$1,$0,0
% While condition of inverse loop
_putInt_Inverse_Loop_	SET	$0,8
	ADD	$0,$0,FP
	LDO	$0,$0,0
	BZ	$0,_putInt_Print_out_loop
% While loop of inverse loop
	SET	$0,16
	SUB	$0,FP,$0
	LDO	$2,$0,0
	MUL	$2,$2,10 % Multipling inverse num
	SET	$0,8
	ADD	$0,$0,FP
	LDO	$3,$0,0
	DIV	$3,$3,10
	STO	$3,$0,0 % Storing N
	GET	$1,rR
	ADD	$2,$2,$1
	SET	$0,16
	SUB	$0,FP,$0
	STO	$2,$0,0
	JMP	_putInt_Inverse_Loop_
% While condition of print loop
_putInt_Print_out_loop	SET	$0,16
	SUB	$0,FP,$0
	LDO	$0,$0,0
	SET	$1,1
	CMP	$0,$0,$1
	ZSP	$0,$0,1
	BZ	$0,_putInt_Print_out_end
	SET	$0,16
	SUB	$0,FP,$0
	LDO	$1,$0,0
	DIV	$1,$1,10
	GET	$2,rR
	STO	$1,$0,0
	ADD	$2,$2,48
	STO	$2,$254,8
	PUSHJ	$8,_putChar
	JMP	_putInt_Print_out_loop
_putInt_Print_out_end	JMP	L114	%	 --- Epilogue ---
L114	STO	 $0,FP,0  % Save return value 
	%	 Highering Stack pointer 
	SET	 SP,FP
	%	 Getting RA 
	SET	 $0,32
	SUB	 $0,SP,$0
	LDO	 $1,$0,8
	PUT	 rJ,$1
	%	 Getting old FP 
	LDO	 FP,$0,0
	POP	 8,0
