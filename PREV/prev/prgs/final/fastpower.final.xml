<?xml version="1.0" encoding="UTF-8" standalone="no"?><?xml-stylesheet type="text/xsl" href="../../data/final.xsl"?><final><code entrylabel="L19" exitlabel="L20" tempsize="0"><frame FP="T6" RV="T7" argssize="0" depth="1" label="_power" locssize="8" size="24"/><instructions><instruction code="% --- Prolog ---"/><instruction code="_power"/><instruction code="SET $0,24"/><instruction code="% Storing FP "/><instruction code="SUB $0,SP,$0"/><instruction code="STO FP,$0,0"/><instruction code="% STORING RA "/><instruction code="GET $1,rJ"/><instruction code="STO $1,$0,8"/><instruction code="% Lowering FP "/><instruction code="SET FP,SP"/><instruction code="% Lowering SP "/><instruction code="SET $0,24"/><instruction code="SUB SP,SP,$0"/><instruction code="JMP L19"/><instruction code="L19"/><instruction code="SET $0,1"/><instruction code="SET $1,$0"/><instruction code="SET $0,$253"/><instruction code="SET $2,8"/><instruction code="NEG $2,0,$2"/><instruction code="SET $2,$2"/><instruction code="ADD $0,$0,$2"/><instruction code="SET $0,$0"/><instruction code="STO $1,$0,0"/><instruction code="L11"/><instruction code="SET $1,$253"/><instruction code="SET $0,16"/><instruction code="SET $0,$0"/><instruction code="ADD $0,$1,$0"/><instruction code="SET $0,$0"/><instruction code="LDO $0,$0,0"/><instruction code="SET $0,$0"/><instruction code="SET $1,0"/><instruction code="SET $1,$1"/><instruction code="CMP $0,$0,$1"/><instruction code="ZSP $0,$0,1"/><instruction code="SET $0,$0"/><instruction code="BZ $0,L12"/><instruction code="L10"/><instruction code="SET $0,$253"/><instruction code="SET $1,8"/><instruction code="NEG $1,0,$1"/><instruction code="SET $1,$1"/><instruction code="ADD $0,$0,$1"/><instruction code="SET $0,$0"/><instruction code="LDO $0,$0,0"/><instruction code="SET $0,$0"/><instruction code="SET $2,$253"/><instruction code="SET $1,8"/><instruction code="SET $1,$1"/><instruction code="ADD $1,$2,$1"/><instruction code="SET $1,$1"/><instruction code="LDO $1,$1,0"/><instruction code="SET $1,$1"/><instruction code="MUL $0,$0,$1"/><instruction code="SET $0,$0"/><instruction code="SET $1,$253"/><instruction code="SET $2,24"/><instruction code="SET $2,$2"/><instruction code="ADD $1,$1,$2"/><instruction code="SET $1,$1"/><instruction code="LDO $1,$1,0"/><instruction code="SET $1,$1"/><instruction code="DIV $0,$0,$1"/><instruction code="GET $0,rR"/><instruction code="SET $2,$0"/><instruction code="SET $0,$253"/><instruction code="SET $1,8"/><instruction code="NEG $1,0,$1"/><instruction code="SET $1,$1"/><instruction code="ADD $0,$0,$1"/><instruction code="SET $0,$0"/><instruction code="STO $2,$0,0"/><instruction code="SET $1,$253"/><instruction code="SET $0,16"/><instruction code="SET $0,$0"/><instruction code="ADD $0,$1,$0"/><instruction code="SET $0,$0"/><instruction code="LDO $0,$0,0"/><instruction code="SET $1,$0"/><instruction code="SET $0,1"/><instruction code="SET $0,$0"/><instruction code="SUB $0,$1,$0"/><instruction code="SET $1,$0"/><instruction code="SET $2,$253"/><instruction code="SET $0,16"/><instruction code="SET $0,$0"/><instruction code="ADD $0,$2,$0"/><instruction code="SET $0,$0"/><instruction code="STO $1,$0,0"/><instruction code="JMP L11"/><instruction code="L12"/><instruction code="SET $1,$253"/><instruction code="SET $0,8"/><instruction code="NEG $0,0,$0"/><instruction code="SET $0,$0"/><instruction code="ADD $0,$1,$0"/><instruction code="SET $0,$0"/><instruction code="LDO $0,$0,0"/><instruction code="SET $0,$0"/><instruction code="JMP L20"/><instruction code="% --- Epilogue ---"/><instruction code="L20"/><instruction code="STO $0,FP,0  % Save return value "/><instruction code="% Highering Stack pointer "/><instruction code="SET SP,FP"/><instruction code="% Getting RA "/><instruction code="SET $0,24"/><instruction code="SUB $0,SP,$0"/><instruction code="LDO $1,$0,8"/><instruction code="PUT rJ,$1"/><instruction code="% Getting old FP "/><instruction code="LDO FP,$0,0"/><instruction code="POP 8,0"/></instructions></code><code entrylabel="L21" exitlabel="L22" tempsize="0"><frame FP="T8" RV="T9" argssize="0" depth="1" label="_powerFast" locssize="8" size="24"/><instructions><instruction code="% --- Prolog ---"/><instruction code="_powerFast"/><instruction code="SET $0,24"/><instruction code="% Storing FP "/><instruction code="SUB $0,SP,$0"/><instruction code="STO FP,$0,0"/><instruction code="% STORING RA "/><instruction code="GET $1,rJ"/><instruction code="STO $1,$0,8"/><instruction code="% Lowering FP "/><instruction code="SET FP,SP"/><instruction code="% Lowering SP "/><instruction code="SET $0,24"/><instruction code="SUB SP,SP,$0"/><instruction code="JMP L21"/><instruction code="L21"/><instruction code="SET $0,1"/><instruction code="SET $2,$0"/><instruction code="SET $0,$253"/><instruction code="SET $1,8"/><instruction code="NEG $1,0,$1"/><instruction code="SET $1,$1"/><instruction code="ADD $0,$0,$1"/><instruction code="SET $0,$0"/><instruction code="STO $2,$0,0"/><instruction code="L14"/><instruction code="SET $1,$253"/><instruction code="SET $0,16"/><instruction code="SET $0,$0"/><instruction code="ADD $0,$1,$0"/><instruction code="SET $0,$0"/><instruction code="LDO $0,$0,0"/><instruction code="SET $0,$0"/><instruction code="SET $1,0"/><instruction code="SET $1,$1"/><instruction code="CMP $0,$0,$1"/><instruction code="ZSP $0,$0,1"/><instruction code="SET $0,$0"/><instruction code="BZ $0,L18"/><instruction code="L13"/><instruction code="SET $1,$253"/><instruction code="SET $0,16"/><instruction code="SET $0,$0"/><instruction code="ADD $0,$1,$0"/><instruction code="SET $0,$0"/><instruction code="LDO $0,$0,0"/><instruction code="SET $1,$0"/><instruction code="SET $0,2"/><instruction code="SET $0,$0"/><instruction code="DIV $0,$1,$0"/><instruction code="GET $0,rR"/><instruction code="SET $0,$0"/><instruction code="SET $1,1"/><instruction code="SET $1,$1"/><instruction code="CMP $0,$0,$1"/><instruction code="ZSZ $0,$0,1"/><instruction code="SET $0,$0"/><instruction code="BZ $0,L17"/><instruction code="L15"/><instruction code="SET $0,$253"/><instruction code="SET $1,8"/><instruction code="NEG $1,0,$1"/><instruction code="SET $1,$1"/><instruction code="ADD $0,$0,$1"/><instruction code="SET $0,$0"/><instruction code="LDO $0,$0,0"/><instruction code="SET $0,$0"/><instruction code="SET $1,$253"/><instruction code="SET $2,8"/><instruction code="SET $2,$2"/><instruction code="ADD $1,$1,$2"/><instruction code="SET $1,$1"/><instruction code="LDO $1,$1,0"/><instruction code="SET $1,$1"/><instruction code="MUL $0,$0,$1"/><instruction code="SET $0,$0"/><instruction code="SET $2,$253"/><instruction code="SET $1,24"/><instruction code="SET $1,$1"/><instruction code="ADD $1,$2,$1"/><instruction code="SET $1,$1"/><instruction code="LDO $1,$1,0"/><instruction code="SET $1,$1"/><instruction code="DIV $0,$0,$1"/><instruction code="GET $0,rR"/><instruction code="SET $1,$0"/><instruction code="SET $0,$253"/><instruction code="SET $2,8"/><instruction code="NEG $2,0,$2"/><instruction code="SET $2,$2"/><instruction code="ADD $0,$0,$2"/><instruction code="SET $0,$0"/><instruction code="STO $1,$0,0"/><instruction code="JMP L16"/><instruction code="L17"/><instruction code="L16"/><instruction code="SET $1,$253"/><instruction code="SET $0,8"/><instruction code="SET $0,$0"/><instruction code="ADD $0,$1,$0"/><instruction code="SET $0,$0"/><instruction code="LDO $0,$0,0"/><instruction code="SET $0,$0"/><instruction code="SET $2,$253"/><instruction code="SET $1,8"/><instruction code="SET $1,$1"/><instruction code="ADD $1,$2,$1"/><instruction code="SET $1,$1"/><instruction code="LDO $1,$1,0"/><instruction code="SET $1,$1"/><instruction code="MUL $0,$0,$1"/><instruction code="SET $0,$0"/><instruction code="SET $1,$253"/><instruction code="SET $2,24"/><instruction code="SET $2,$2"/><instruction code="ADD $1,$1,$2"/><instruction code="SET $1,$1"/><instruction code="LDO $1,$1,0"/><instruction code="SET $1,$1"/><instruction code="DIV $0,$0,$1"/><instruction code="GET $0,rR"/><instruction code="SET $0,$0"/><instruction code="SET $1,$253"/><instruction code="SET $2,8"/><instruction code="SET $2,$2"/><instruction code="ADD $1,$1,$2"/><instruction code="SET $1,$1"/><instruction code="STO $0,$1,0"/><instruction code="SET $0,$253"/><instruction code="SET $1,16"/><instruction code="SET $1,$1"/><instruction code="ADD $0,$0,$1"/><instruction code="SET $0,$0"/><instruction code="LDO $0,$0,0"/><instruction code="SET $1,$0"/><instruction code="SET $0,2"/><instruction code="SET $0,$0"/><instruction code="DIV $0,$1,$0"/><instruction code="SET $2,$0"/><instruction code="SET $1,$253"/><instruction code="SET $0,16"/><instruction code="SET $0,$0"/><instruction code="ADD $0,$1,$0"/><instruction code="SET $0,$0"/><instruction code="STO $2,$0,0"/><instruction code="JMP L14"/><instruction code="L18"/><instruction code="SET $1,$253"/><instruction code="SET $0,8"/><instruction code="NEG $0,0,$0"/><instruction code="SET $0,$0"/><instruction code="ADD $0,$1,$0"/><instruction code="SET $0,$0"/><instruction code="LDO $0,$0,0"/><instruction code="SET $0,$0"/><instruction code="JMP L22"/><instruction code="% --- Epilogue ---"/><instruction code="L22"/><instruction code="STO $0,FP,0  % Save return value "/><instruction code="% Highering Stack pointer "/><instruction code="SET SP,FP"/><instruction code="% Getting RA "/><instruction code="SET $0,24"/><instruction code="SUB $0,SP,$0"/><instruction code="LDO $1,$0,8"/><instruction code="PUT rJ,$1"/><instruction code="% Getting old FP "/><instruction code="LDO FP,$0,0"/><instruction code="POP 8,0"/></instructions></code><code entrylabel="L23" exitlabel="L24" tempsize="0"><frame FP="T10" RV="T11" argssize="32" depth="1" label="_main" locssize="0" size="48"/><instructions><instruction code="% --- Prolog ---"/><instruction code="_main"/><instruction code="SET $0,16"/><instruction code="% Storing FP "/><instruction code="SUB $0,SP,$0"/><instruction code="STO FP,$0,0"/><instruction code="% STORING RA "/><instruction code="GET $1,rJ"/><instruction code="STO $1,$0,8"/><instruction code="% Lowering FP "/><instruction code="SET FP,SP"/><instruction code="% Lowering SP "/><instruction code="SET $0,48"/><instruction code="SUB SP,SP,$0"/><instruction code="JMP L23"/><instruction code="L23"/><instruction code="SET $0,0"/><instruction code="SET $2,$0"/><instruction code="LDA $0,L5"/><instruction code="LDO $1,$0,0"/><instruction code="SET $0,$0"/><instruction code="STO $2,$254,0"/><instruction code="STO $0,$254,8"/><instruction code="PUSHJ $8,_putString"/><instruction code="LDO $0,$254,0"/><instruction code="SET $0,0"/><instruction code="SET $0,$0"/><instruction code="SET $1,0"/><instruction code="SET $1,$1"/><instruction code="SET $2,3"/><instruction code="SET $3,$2"/><instruction code="SET $2,59407"/><instruction code="INCML $2,4"/><instruction code="SET $4,$2"/><instruction code="SET $2,71"/><instruction code="SET $2,$2"/><instruction code="STO $1,$254,0"/><instruction code="STO $3,$254,8"/><instruction code="STO $4,$254,16"/><instruction code="STO $2,$254,24"/><instruction code="PUSHJ $8,_power"/><instruction code="LDO $1,$254,0"/><instruction code="SET $1,$1"/><instruction code="STO $0,$254,0"/><instruction code="STO $1,$254,8"/><instruction code="PUSHJ $8,_putInt"/><instruction code="LDO $0,$254,0"/><instruction code="SET $0,0"/><instruction code="SET $2,$0"/><instruction code="LDA $1,L6"/><instruction code="LDO $0,$1,0"/><instruction code="SET $0,$1"/><instruction code="STO $2,$254,0"/><instruction code="STO $0,$254,8"/><instruction code="PUSHJ $8,_putString"/><instruction code="LDO $0,$254,0"/><instruction code="SET $0,0"/><instruction code="SET $1,$0"/><instruction code="LDA $0,L7"/><instruction code="LDO $2,$0,0"/><instruction code="SET $0,$0"/><instruction code="STO $1,$254,0"/><instruction code="STO $0,$254,8"/><instruction code="PUSHJ $8,_putString"/><instruction code="LDO $0,$254,0"/><instruction code="SET $0,0"/><instruction code="SET $0,$0"/><instruction code="SET $1,0"/><instruction code="SET $1,$1"/><instruction code="SET $2,3"/><instruction code="SET $2,$2"/><instruction code="SET $3,59407"/><instruction code="INCML $3,4"/><instruction code="SET $4,$3"/><instruction code="SET $3,71"/><instruction code="SET $3,$3"/><instruction code="STO $1,$254,0"/><instruction code="STO $2,$254,8"/><instruction code="STO $4,$254,16"/><instruction code="STO $3,$254,24"/><instruction code="PUSHJ $8,_powerFast"/><instruction code="LDO $1,$254,0"/><instruction code="SET $1,$1"/><instruction code="STO $0,$254,0"/><instruction code="STO $1,$254,8"/><instruction code="PUSHJ $8,_putInt"/><instruction code="LDO $0,$254,0"/><instruction code="SET $0,0"/><instruction code="SET $1,$0"/><instruction code="LDA $2,L8"/><instruction code="LDO $0,$2,0"/><instruction code="SET $0,$2"/><instruction code="STO $1,$254,0"/><instruction code="STO $0,$254,8"/><instruction code="PUSHJ $8,_putString"/><instruction code="LDO $0,$254,0"/><instruction code="SET $0,0"/><instruction code="SET $0,$0"/><instruction code="JMP L24"/><instruction code="% --- Epilogue ---"/><instruction code="L24"/><instruction code="STO $0,FP,0  % Save return value "/><instruction code="% Highering Stack pointer "/><instruction code="SET SP,FP"/><instruction code="% Getting RA "/><instruction code="SET $0,16"/><instruction code="SUB $0,SP,$0"/><instruction code="LDO $1,$0,8"/><instruction code="PUT rJ,$1"/><instruction code="% Getting old FP "/><instruction code="LDO FP,$0,0"/><instruction code="POP 8,0"/></instructions></code></final>